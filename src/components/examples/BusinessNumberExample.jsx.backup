import React, { useState } from 'react';\nimport NumberInput from '../atoms/NumberInput.jsx';\n\n/**\n * 사업자 번호 입력 컴포넌트 사용 예시\n */\nconst BusinessNumberExample = () => {\n  const [businessNumber, setBusinessNumber] = useState('');\n  const [validationResult, setValidationResult] = useState(null);\n  const [apiKey] = useState(process.env.REACT_APP_BUSINESS_API_KEY || 'your-api-key-here');\n\n  const handleValidationComplete = (result) => {\n    console.log('검증 완료:', result.toJSON());\n    setValidationResult(result);\n    \n    if (result.isActiveBusiness()) {\n      alert(`검증 성공! 회사명: ${result.companyName}`);\n    } else if (result.isSuspended()) {\n      alert('휴업 중인 사업자입니다.');\n    } else if (result.isClosed()) {\n      alert('폐업한 사업자입니다.');\n    }\n  };\n\n  const handleValidationError = (error) => {\n    console.error('검증 에러:', error);\n    setValidationResult(null);\n  };\n\n  return (\n    <div className=\"business-number-example\">\n      <h2>사업자 번호 입력 컴포넌트 예시</h2>\n      \n      {/* 기본 사업자 번호 입력 */}\n      <div className=\"example-section\">\n        <h3>1. 기본 사업자 번호 입력</h3>\n        <NumberInput\n          variant=\"business-number\"\n          label=\"사업자등록번호\"\n          value={businessNumber}\n          onChange={setBusinessNumber}\n          placeholder=\"000-00-00000\"\n          required\n          businessNumberApiKey={apiKey}\n          onValidationComplete={handleValidationComplete}\n          onValidationError={handleValidationError}\n        />\n      </div>\n\n      {/* 자동 검증 활성화 */}\n      <div className=\"example-section\">\n        <h3>2. 자동 검증 (입력 시 자동으로 검증)</h3>\n        <NumberInput\n          variant=\"business-number\"\n          label=\"사업자등록번호 (자동검증)\"\n          value={businessNumber}\n          onChange={setBusinessNumber}\n          required\n          businessNumberApiKey={apiKey}\n          autoValidate={true}\n          showValidationButton={false}\n          onValidationComplete={handleValidationComplete}\n          onValidationError={handleValidationError}\n        />\n      </div>\n\n      {/* 회사명 숨김 */}\n      <div className=\"example-section\">\n        <h3>3. 회사명 표시 안함</h3>\n        <NumberInput\n          variant=\"business-number\"\n          label=\"사업자등록번호 (회사명 숨김)\"\n          value={businessNumber}\n          onChange={setBusinessNumber}\n          businessNumberApiKey={apiKey}\n          showCompanyName={false}\n          onValidationComplete={handleValidationComplete}\n          onValidationError={handleValidationError}\n        />\n      </div>\n\n      {/* 일반 숫자 입력과 비교 */}\n      <div className=\"example-section\">\n        <h3>4. 일반 숫자 입력 (비교용)</h3>\n        <NumberInput\n          variant=\"number\"\n          label=\"일반 숫자\"\n          value={123}\n          onChange={(value) => console.log('숫자 변경:', value)}\n          min={0}\n          max={1000}\n          step={1}\n        />\n      </div>\n\n      {/* 검증 결과 표시 */}\n      {validationResult && (\n        <div className=\"validation-result\">\n          <h3>검증 결과</h3>\n          <pre>{JSON.stringify(validationResult.toJSON(), null, 2)}</pre>\n        </div>\n      )}\n\n      {/* 테스트용 사업자 번호 목록 */}\n      <div className=\"test-numbers\">\n        <h3>테스트용 사업자 번호</h3>\n        <p>※ 실제 API 키가 필요합니다. 아래는 형식 예시입니다.</p>\n        <ul>\n          <li>\n            <button onClick={() => setBusinessNumber('123-45-67890')}>\n              123-45-67890 (형식 예시)\n            </button>\n          </li>\n          <li>\n            <button onClick={() => setBusinessNumber('000-00-00000')}>\n              000-00-00000 (유효하지 않은 번호)\n            </button>\n          </li>\n          <li>\n            <button onClick={() => setBusinessNumber('1234567890')}>\n              1234567890 (포맷 없음 - 자동 포맷팅됨)\n            </button>\n          </li>\n        </ul>\n      </div>\n\n      <style jsx>{`\n        .business-number-example {\n          max-width: 600px;\n          margin: 20px auto;\n          padding: 20px;\n          font-family: Arial, sans-serif;\n        }\n        \n        .example-section {\n          margin-bottom: 30px;\n          padding: 20px;\n          border: 1px solid #e0e0e0;\n          border-radius: 8px;\n          background-color: #f9f9f9;\n        }\n        \n        .example-section h3 {\n          margin-top: 0;\n          color: #333;\n        }\n        \n        .validation-result {\n          margin-top: 20px;\n          padding: 15px;\n          background-color: #e8f5e8;\n          border-radius: 8px;\n          border: 1px solid #c3e6c3;\n        }\n        \n        .validation-result pre {\n          background-color: #f5f5f5;\n          padding: 10px;\n          border-radius: 4px;\n          overflow-x: auto;\n          font-size: 12px;\n        }\n        \n        .test-numbers {\n          margin-top: 30px;\n          padding: 20px;\n          background-color: #f0f8ff;\n          border-radius: 8px;\n          border: 1px solid #b0d4f1;\n        }\n        \n        .test-numbers button {\n          margin: 5px;\n          padding: 8px 12px;\n          background-color: #007bff;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 12px;\n        }\n        \n        .test-numbers button:hover {\n          background-color: #0056b3;\n        }\n        \n        .test-numbers ul {\n          list-style: none;\n          padding: 0;\n        }\n        \n        .test-numbers li {\n          margin: 10px 0;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default BusinessNumberExample;